#! /bin/bash
# this file is based on opensgx in opensgx repository
ROOT=$(dirname "$0")
SGXTOOL=$ROOT/sgx-tool
DEVICEKEY=$ROOT/conf/device.key
SGXRUNTIME=$ROOT/sgx-runtime
GDBPORT=-1

key_gen() {
  FILENAME=sign.key
  $SGXTOOL -k 3072 > $FILENAME
}

compile_code() {
  BASEDIR=$(dirname $1)
  SUBDIR=${BASEDIR#*/}
  BASENAME=$(basename $1)
  NAME="${BASENAME%.*}"

  make $SUBDIR/$NAME.sgx
}

run_enclave() {
  $SGXRUNTIME $1 $2
}

#run_enclave_with_icount() {
#  $SGX -i $SGXRUNTIME $1 $2
#}

#debug_enclave() {
#  $SGX -g $GDBPORT $SGXRUNTIME $@
#}

measure() {
  $SGXTOOL -m $1
}

sign() {
  BASEDIR=$(dirname $1)
  BASENAME=$(basename $1)
  NAME="${BASENAME%.*}"
  MEASURE=$BASEDIR/$NAME-measurement.conf
  SIG=$BASEDIR/$NAME-sig.conf
  TOKEN=$BASEDIR/$NAME-token.conf
  CONF=$BASEDIR/$NAME.conf

  touch $CONF
  measure $1 > $MEASURE

  $SGXTOOL -S $MEASURE > $SIG
  $SGXTOOL -s $SIG --key=$2 > $CONF
  $SGXTOOL -E $CONF > $TOKEN
  $SGXTOOL -M $TOKEN --key=$DEVICEKEY >> $CONF

  rm $MEASURE $SIG $TOKEN
}

case "$1" in
  -k|--key)
  key_gen
  ;;
  -c|--compile)
  compile_code $2
  ;;
  -m|--measure)
  measure $2
  ;;
  -s|--sign)
  case "$3" in
    -k|--key)
    sign $2 $4
    ;;
  esac
  ;;
#  -i|--icount)
#  run_enclave_with_icount $2 $3
#  ;;
  -t|--test)
  run_enclave $2
  ;;
#  -d|--debug)
#  GDBPORT=$2
#  shift; shift
#  debug_enclave $@
#  ;;
  *)
  run_enclave $1 $2
  ;;
esac
